.heroSamples {
 display: flex;
 flex-direction: column;
 gap: var(--spacing-10)

}

.hero .MuiGrid-container {
  padding-top: 0;
  padding-bottom: 0;
}

.hero {
    color: var(--on-primary);
    /* min-height: calc(var(--zoom) * 200px); */
    display: flex;
    flex-direction: column;
    margin: 0;
    gap: calc(var(--spacing-1) * var(--hero-gap));
    width: 100%;
    padding-top: calc(var(--spacing-1) * var(--hero-padding));
    padding-bottom: calc(var(--spacing-1) * var(--hero-padding));
    position: relative;
    z-index: 4;
    background-color: var(--primary);
    position: relative;
}
.hero.backgroundImage {
  background-size: cover !important;
}
.hero.backgroundImage::before, .hero.backgroundVideo::before  {
  opacity: .35;
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 1;
}
/* colored wiuth background image */
.hero.backgroundImage::after , .hero.backgroundVideo::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  opacity: 1;
  z-index: 0;
}

/* white with background image */
.hero.backgroundImage.white::before, .hero.backgroundVideo.white::before {
  background: var(--white);
  opacity: .5
}

.hero.backgroundImage.white::after, .hero.backgroundVideo.white::after  {
  opacity: .85;
  background-image: url('data:image/svg+xml,<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 2 2" style="enable-background:new 0 0 2 2;" xml:space="preserve"><style type="text/css">.st0{fill:rgb(255,255,255); opacity: 0} .st1{fill:rgb(255,255,255);}</style><rect class="st1" width="1" height="1"/><rect x="1" class="st0" width="1" height="1"/><rect y="1" class="st0" width="1" height="1"/><rect class="st1" x="1" y="1" width="1" height="1"/></svg>');
  background-repeat: repeat;
    background-size: 2px;
}
.hero.backgroundImage.white, .hero.backgroundImage.white.breadcrumbs .MuiBreadcrumbs-li a, .hero.backgroundVideo.white  {
  text-shadow: #FFF 0px 0 10px  !important;
}
/* darkmode white */
.darkmode .hero.backgroundImage.white, .darkmode .hero.backgroundVideo.white {
  color: rgba(255,255,255,.6) !important
}
.darkmode .hero.backgroundImage.white::after, .darkmode .hero.backgroundVideo.white::after  {
  opacity: .85;
  background-image: url('data:image/svg+xml,<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 2 2" style="enable-background:new 0 0 2 2;" xml:space="preserve"><style type="text/css">.st0{fill:rgb(255,255,255); opacity: 0} .st1{fill:rgb(0,0,0);}</style><rect class="st1" width="1" height="1"/><rect x="1" class="st0" width="1" height="1"/><rect y="1" class="st0" width="1" height="1"/><rect class="st1" x="1" y="1" width="1" height="1"/></svg>');
  background-repeat: repeat;
  background-size: 2px;
}
.darkmode .hero.backgroundImage.white::before, .darkmode .hero.backgroundVideo.white::before {
  background: var(--black);
  opacity: .5
}
.darkmode .hero.backgroundImage.white, .darkmode .hero.backgroundImage.white.breadcrumbs .MuiBreadcrumbs-li a, .darkmode .hero.backgroundVideo.white  {
  text-shadow: rgb(0,0,0) 0px 0 10px  !important;
}

/* black with background image */
.hero.backgroundImage.black::before, .hero.backgroundVideo.black::before  {
  background: var(--black);
  opacity: .5
}
.hero.backgroundImage.black::after, .hero.backgroundVideo.black::after {
  opacity: .85;
  background-image: url('data:image/svg+xml,<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 2 2" style="enable-background:new 0 0 2 2;" xml:space="preserve"><style type="text/css">.st0{fill:rgb(0,0,0); opacity: 0} .st1{fill:rgb(0,0,0);}</style><rect class="st1" width="1" height="1"/><rect x="1" class="st0" width="1" height="1"/><rect y="1" class="st0" width="1" height="1"/><rect class="st1" x="1" y="1" width="1" height="1"/></svg>');
  background-repeat: repeat;
    background-size: 2px;
}
.hero.backgroundImage.black, .hero.backgroundImage.black.breadcrumbs .MuiBreadcrumbs-li a, .hero.backgroundVideo.black {
  text-shadow: #000 0px 0 10px  !important;
}

/* gradient-1 with background image */

 .herowithOverlay.white, .herowithOverlay.black,  .darkmode .herowithOverlay.white, .darkmode .herowithOverlay.black  {
   background-color: transparent !important;
   color: inherit !important;
 }

.herowithOverlay.colored, .herowithOverlay.gradient-1, .herowithOverlay.gradient-2, .herowithOverlay.gradient-3 {
 display: none;
}



.hero .inline-image {
  height: 300px;
}

.hero.inlineVideo button {
  margin-top: var(--spacing-3);
}

.hero > * {
  z-index: 2;
}

.darkmode .hero {
    color: var(--dm-on-hero)
}

.hero .holder {
    position: relative;
    background: var(--hero) !important;
}

.darkmode .hero .holder {
    background: var(--dm-hero) !important;
}

.hero .body {
    font: var(--hero-bodyTypography) !important;
    letter-spacing: var(--hero-bodySpacing);
    text-transform: var(--hero-bodyTransform);
}

.hero .content {
    display: flex;
    flex-direction: row;
    gap: calc(var(--zoom) * var(--spacing-3));
}

.hero .title {
    display: flex;
    flex-direction: var(--hero-title-flex-direction);
    flex-direction: column;
    font: var(--hero-titleTypography) !important;
    text-decoration: var(--Display1TextDecoration) !important;
    letter-spacing: var(--hero-titleSpacing) !important;
    text-transform: var(--hero-titleTransform) !important;
}

.hero .icon {
    width: 72px;
    height: 72px;
    display: none;
}

.hero .icon.dark svg path {
    fill: var(--on-white) !important;
}

.hero .icon.white svg path {
    fill: var(--white) !important;
}

.hero .button-area {
    justify-content: flex-start;
    display: flex;
    gap: var(--spacing-2);
}

.hero .actions {
    display: flex;
    gap: calc(var(--zoom) * var(--spacing-1));
    align-items: center;
}

.darkmode .hero .icon.dark svg path {
    fill: var(--dm-white) !important;
}

.darkmode .hero .icon.white svg path {
    fill: var(--dm-white) !important;
}

.hero .line {
    height: 4px;
    width: 100px;
    background: var(--primary);
    display: none;
}

.hero .line.active {
    display: block;
}

.hero .event {
    display: none;
    flex-direction: column;
    gap: 16px;
}

.hero .event.active {
    display: flex;
}

.hero .event .box {
    border-radius: 8px;
    border: 1px solid #ffffff;
    display: flex;
    flex-direction: column;
    padding: 8px;
    text-align: center;
    width: 100px;
}

.hero .event .box.dark {
    border: 1px solid #121212;
}


/*
  .backgroundImage {
    background: url(../img/preview.jpeg) center center no-repeat;
    background-size: cover;
    background: url(../img/preview.jpeg) center center no-repeat;
    background-size: cover;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1;
    display: none;
  }
  .backgroundOverlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 2;
    background: var(--hero);
    color: var(--on-hero);
    opacity: .85;
    display: none;
  }
  .backgroundMesh {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 3;
    background-size: 2px;
    opacity: .75;
    background-image: url('data:image/svg+xml,<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 2 2" style="enable-background:new 0 0 2 2;" xml:space="preserve"><style type="text/css">.st0{fill:%23FFFFFF; opacity: 0} .st1{fill:%230066ef;}</style><rect class="st1" width="1" height="1"/><rect x="1" class="st0" width="1" height="1"/><rect y="1" class="st0" width="1" height="1"/><rect class="st1" x="1" y="1" width="1" height="1"/></svg>');
    background-repeat: repeat;
    background-size: 2px;
    display: none;
  }
  .backgroundMesh .st0 {}
  */

.hero .button.active,
.hero .button-secondary.active,
.hero .icon.active,
/* .backgroundImage.active,
.backgroundOverlay.active,
.backgroundMesh.active, */
.hero .video.active,
.hero .image.active {
    display: block;
}

.hero .image img,
.hero .video img {
    width: 100%;
}

.hero .area {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 4;
}

.video-container {
    /* width is set as 100% here. any width can be specified as per requirement */
    width: 100%;
    padding-top: 56.25%;
    height: 0px;
    position: relative;
    background: #000;
}

.video {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    border: none;
}
.hero.backgroundVideo {
  width: 100%;
  height: 100vh;
  position: relative;
  padding-top: 0;
  display: flex;
  flex-direction: row;
  align-items: center;
  align-content: center;
  padding: 0;
}

.hero .bgVideo {
  width: 100% !important;
  height: 100% !important;
  object-fit: cover;
  position: absolute;
  z-index: 0;
}
